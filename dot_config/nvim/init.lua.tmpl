local lazypath = vim.env.LAZY or vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.env.LAZY or (vim.uv or vim.loop).fs_stat(lazypath)) then
  -- stylua: ignore
  vim.fn.system({ "git", "clone", "--filter=blob:none", "https://github.com/folke/lazy.nvim.git", "--branch=stable",
    lazypath })
end
vim.opt.rtp:prepend(lazypath)

-- validate that lazy is available
if not pcall(require, "lazy") then
  -- stylua: ignore
  vim.api.nvim_echo(
    { { ("Unable to load lazy from: %s\n"):format(lazypath), "ErrorMsg" }, { "Press any key to exit...", "MoreMsg" } },
    true, {})
	vim.fn.getchar()
	vim.cmd.quit()
end

require("lazy").setup({
	{
		"AstroNvim/AstroNvim",
		version = "^5", -- Remove version tracking to elect for nightly AstroNvim
		import = "astronvim.plugins",
	},
	{ import = "community" },
	{ import = "plugins" },
} --[[@as LazySpec]], {
{{- if eq .theme "catppuccin" }}
	install = { colorscheme = { "catppuccin", "astrotheme" } },
{{- else if eq .theme "tokyonight" }}
	install = { colorscheme = { "tokyonight", "astrotheme" } },
{{- else }}
	install = { colorscheme = { "astrotheme" } },
{{- end }}
	checker = { enabled = true },
	ui = { backdrop = 100 },
	performance = {
		rtp = {
			-- disable some rtp plugins
			disabled_plugins = {
				"gzip",
				"netrwPlugin",
				"tarPlugin",
				"tohtml",
				"tutor",
				"zipPlugin",
			},
		},
	},
} --[[@as LazyConfig]])
